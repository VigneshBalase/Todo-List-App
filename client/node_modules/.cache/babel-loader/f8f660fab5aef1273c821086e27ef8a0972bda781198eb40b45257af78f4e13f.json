{"ast":null,"code":"var _jsxFileName = \"D:\\\\aSSIGNMENT\\\\todo-list-app\\\\client\\\\src\\\\Components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/card'; // Import the updated Card component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileHover = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n\n  // Fetch todos from the database\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/v1/todos');\n        const data = await response.json();\n        setCards(data);\n      } catch (error) {\n        console.error('Error fetching todos:', error);\n      }\n    };\n    fetchTodos();\n  }, []); // Empty dependency array to fetch data once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n      // Assuming the API returns an _id for each todo item\n      title: card.title,\n      description: card.description,\n      priority: card.priority,\n      tags: card.tags,\n      mentionedUsers: card.mentionedUsers\n    }, card._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileHover, \"M51NroWgc5aUEHiqsZiaQ+7WeWA=\");\n_c = ProfileHover;\nexport default ProfileHover;\nvar _c;\n$RefreshReg$(_c, \"ProfileHover\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProfileHover","_s","cards","setCards","fetchTodos","response","fetch","data","json","error","console","className","children","map","card","index","Card","title","description","priority","tags","mentionedUsers","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/aSSIGNMENT/todo-list-app/client/src/Components/Cards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../css/card'; // Import the updated Card component\r\n\r\nconst ProfileHover = () => {\r\n  const [cards, setCards] = useState([]);\r\n  \r\n  // Fetch todos from the database\r\n  useEffect(() => {\r\n    const fetchTodos = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/v1/todos');\r\n        const data = await response.json();\r\n        setCards(data);\r\n      } catch (error) {\r\n        console.error('Error fetching todos:', error);\r\n      }\r\n    };\r\n    fetchTodos();\r\n  }, []); // Empty dependency array to fetch data once on mount\r\n\r\n  return (\r\n    <div className=\"card-container\">\r\n      {cards.map((card, index) => (\r\n        <Card \r\n          key={card._id}  // Assuming the API returns an _id for each todo item\r\n          title={card.title}\r\n          description={card.description}\r\n          priority={card.priority}\r\n          tags={card.tags}\r\n          mentionedUsers={card.mentionedUsers}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileHover;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAClE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,QAAQ,CAACI,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDL,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKY,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BV,KAAK,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBhB,OAAA,CAACiB,IAAI;MACa;MAChBC,KAAK,EAAEH,IAAI,CAACG,KAAM;MAClBC,WAAW,EAAEJ,IAAI,CAACI,WAAY;MAC9BC,QAAQ,EAAEL,IAAI,CAACK,QAAS;MACxBC,IAAI,EAAEN,IAAI,CAACM,IAAK;MAChBC,cAAc,EAAEP,IAAI,CAACO;IAAe,GAL/BP,IAAI,CAACQ,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMd,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA/BID,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}