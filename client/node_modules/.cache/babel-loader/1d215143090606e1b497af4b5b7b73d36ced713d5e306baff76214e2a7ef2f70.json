{"ast":null,"code":"var _jsxFileName = \"D:\\\\aSSIGNMENT\\\\todo-list-app\\\\client\\\\src\\\\Components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  title,\n  description,\n  priority,\n  tags,\n  mentionedUsers\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"img-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 10\n      }, this), \" \", description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Priority:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 10\n      }, this), \" \", priority]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tags:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 10\n      }, this), \" \", tags.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Mentioned Users:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 10\n      }, this), mentionedUsers.length > 0 ? mentionedUsers.map(user => user.username).join(', ') : 'No users mentioned']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\nconst ProfileHover = () => {\n  _s();\n  const [cards, setCards] = useState([]); // Default to an empty array\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4MGY5YzBmMmJmODgzYjM2ZTA3YmViYyIsImlhdCI6MTc0NTkxNzI3OSwiZXhwIjoxNzQ4NTA5Mjc5fQ.5MxYozNKwnfQl8IdbJyc3Pl1F3zrc8L7TpDZ1X-kQwg'; // Replace with the actual token (could be stored in localStorage or context)\n\n        const response = await fetch('http://localhost:5000/api/v1/todos', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` // Include the token in the Authorization header\n          }\n        });\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setCards(data);\n        } else {\n          console.error('Expected an array but got:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching todos:', error);\n      }\n    };\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: Array.isArray(cards) && cards.length > 0 ? cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      // Assuming the API returns an _id for each todo item\n      title: card.title,\n      description: card.description,\n      priority: card.priority,\n      tags: card.tags,\n      mentionedUsers: card.mentionedUsers\n    }, card._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No cards available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) // If no cards, show a message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileHover, \"M51NroWgc5aUEHiqsZiaQ+7WeWA=\");\n_c2 = ProfileHover;\nexport default ProfileHover;\nvar _c, _c2;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"ProfileHover\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Card","title","description","priority","tags","mentionedUsers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","join","length","map","user","username","_c","ProfileHover","_s","cards","setCards","fetchTodos","token","response","fetch","method","headers","data","json","Array","isArray","console","error","card","_id","_c2","$RefreshReg$"],"sources":["D:/aSSIGNMENT/todo-list-app/client/src/Components/Cards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../css/card.css';\r\n\r\nconst Card = ({ title, description, priority, tags, mentionedUsers }) => {\r\n  return (\r\n    <div className=\"img-wrapper\">\r\n      <h2>{title}</h2>\r\n      <p><strong>Description:</strong> {description}</p>\r\n      <p><strong>Priority:</strong> {priority}</p>\r\n      <p><strong>Tags:</strong> {tags.join(', ')}</p>\r\n      <p><strong>Mentioned Users:</strong> \r\n        {mentionedUsers.length > 0 ? mentionedUsers.map(user => user.username).join(', ') : 'No users mentioned'}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileHover = () => {\r\n  const [cards, setCards] = useState([]); // Default to an empty array\r\n\r\n  useEffect(() => {\r\n    const fetchTodos = async () => {\r\n      try {\r\n        const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4MGY5YzBmMmJmODgzYjM2ZTA3YmViYyIsImlhdCI6MTc0NTkxNzI3OSwiZXhwIjoxNzQ4NTA5Mjc5fQ.5MxYozNKwnfQl8IdbJyc3Pl1F3zrc8L7TpDZ1X-kQwg'; // Replace with the actual token (could be stored in localStorage or context)\r\n        \r\n        const response = await fetch('http://localhost:5000/api/v1/todos', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`  // Include the token in the Authorization header\r\n          }\r\n        });\r\n  \r\n        const data = await response.json();\r\n  \r\n        if (Array.isArray(data)) {\r\n          setCards(data);\r\n        } else {\r\n          console.error('Expected an array but got:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching todos:', error);\r\n      }\r\n    };\r\n    fetchTodos();\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <div className=\"card-container\">\r\n      {Array.isArray(cards) && cards.length > 0 ? (\r\n        cards.map((card) => (\r\n          <Card \r\n            key={card._id}  // Assuming the API returns an _id for each todo item\r\n            title={card.title}\r\n            description={card.description}\r\n            priority={card.priority}\r\n            tags={card.tags}\r\n            mentionedUsers={card.mentionedUsers}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>No cards available</p> // If no cards, show a message\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileHover;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}